/*! (c) 2021 0b5vr - https://github.com/0b5vr/imtweakpane/blob/master/LICENSE */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("tweakpane")):"function"==typeof define&&define.amd?define(["exports","tweakpane"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).IMTWEAKPANE={},t.Tweakpane)}(this,(function(t,e){"use strict";function s(t){if(t&&t.__esModule)return t;var e=Object.create(null);return t&&Object.keys(t).forEach((function(s){if("default"!==s){var i=Object.getOwnPropertyDescriptor(t,s);Object.defineProperty(e,s,i.get?i:{enumerable:!0,get:function(){return t[s]}})}})),e.default=t,Object.freeze(e)}var i=s(e);class a{constructor(t){this.bladeRackApi=t,this.__params={},this.__folders={},this.__buttons={},this.__tabs={},this.__separators={},this.__inputs={},this.__monitors={},this.__blades={}}folder(t,e){if(!a.imFolderApiCtor)throw new Error(void 0);if(null==this.__folders[t]){const s=this.bladeRackApi.addFolder(Object.assign({title:t},e));this.__folders[t]=new a.imFolderApiCtor(s)}return this.__folders[t]}button(t,e){if(null==this.__buttons[t]){const s=this.bladeRackApi.addButton(Object.assign({title:t},e));this.__buttons[t]=s}return this.__buttons[t]}tab(t,e){if(!a.imTabApiCtor)throw new Error(void 0);if(null==this.__tabs[t]){const s=this.bladeRackApi.addTab(null!=e?e:{pages:[]});this.__tabs[t]=new a.imTabApiCtor(s)}return this.__tabs[t]}separator(t,e){if(null==this.__separators[t]){const s=this.bladeRackApi.addSeparator(e);this.__separators[t]=s}return this.__separators[t]}value(t,e,s){return this.input(t,e,s),this.__params[t]}input(t,e,s){if(null==this.__params[t]){this.__params[t]=e;const i=this.bladeRackApi.addInput(this.__params,t,s);this.__inputs[t]=i}return this.__inputs[t]}monitor(t,e,s){if(null==this.__params[t]){this.__params[t]=e;const i=this.bladeRackApi.addMonitor(this.__params,t,s);this.__monitors[t]=i}return void 0!==e&&e!==this.__params[t]&&(this.__params[t]=e),this.__monitors[t]}blade(t,e){if(null==this.__blades[t]){const s=this.bladeRackApi.addBlade(e);this.__blades[t]=s}return this.__blades[t]}}class r extends a{get folderApi(){return this.bladeRackApi}constructor(t){super(t)}}a.imFolderApiCtor=r;class n extends a{get folderApi(){return this.bladeRackApi}constructor(t){super(t)}}class o{constructor(t){this.tabApi=t,this.__pages={},t.pages.forEach((t=>{this.__pages[t.title]=new n(t)}))}page(t,e){if(null==this.__pages[t]){const s=this.tabApi.addPage(Object.assign({title:t},e));this.__pages[t]=new n(s)}return this.__pages[t]}}a.imTabApiCtor=o,t.ImBladeRackApi=a,t.ImFolderApi=r,t.ImPane=class extends a{get pane(){return this.bladeRackApi}constructor(t){super(new i.Pane(t))}},t.ImTabApi=o,t.ImTabPageApi=n,Object.defineProperty(t,"__esModule",{value:!0})}));
